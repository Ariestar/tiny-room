"use client";

import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import {
    Clock,
    Mail,
    MessageCircle,
    Phone,
    MapPin,
    Coffee,
    Moon,
    Sun,
    Zap,
    Heart,
    Star,
    Timer
} from "lucide-react";

interface ContactInfoProps {
    className?: string;
}

// ËÅîÁ≥ªÊñπÂºèÂÅèÂ•ΩÊï∞ÊçÆ
const contactPreferences = [
    {
        method: "ÈÇÆÁÆ±",
        icon: Mail,
        preference: "ÊúÄ‰Ω≥",
        responseTime: "6-12Â∞èÊó∂",
        availability: "24/7",
        color: "text-blue-500",
        bgColor: "bg-blue-50",
        description: "ËØ¶ÁªÜËÆ®ËÆ∫ÂíåÊ≠£ÂºèÊ≤üÈÄöÁöÑÈ¶ñÈÄâÊñπÂºè",
        tips: ["ÈÄÇÂêàÈ°πÁõÆÂí®ËØ¢", "ÊäÄÊúØËÆ®ËÆ∫", "Âêà‰ΩúÊèêÊ°à"]
    },
    {
        method: "ÂæÆ‰ø°",
        icon: MessageCircle,
        preference: "Âø´ÈÄü",
        responseTime: "1-3Â∞èÊó∂",
        availability: "9:00-22:00",
        color: "text-green-500",
        bgColor: "bg-green-50",
        description: "Êó•Â∏∏‰∫§ÊµÅÂíåÂø´ÈÄüÈóÆÈ¢òËß£Á≠î",
        tips: ["ÁÆÄÂçïÈóÆÈ¢ò", "Êó•Â∏∏‰∫§ÊµÅ", "Á¥ßÊÄ•ËÅîÁ≥ª"]
    },
    {
        method: "ÁîµËØù",
        icon: Phone,
        preference: "Á¥ßÊÄ•",
        responseTime: "Á´ãÂç≥",
        availability: "È¢ÑÁ∫¶Âà∂",
        color: "text-orange-500",
        bgColor: "bg-orange-50",
        description: "Á¥ßÊÄ•‰∫ãÂä°ÊàñÊ∑±Â∫¶ÊäÄÊúØËÆ®ËÆ∫",
        tips: ["Á¥ßÊÄ•ÈóÆÈ¢ò", "ÊäÄÊúØËÆ®ËÆ∫", "Èù¢ËØïÂÆâÊéí"]
    }
];

// Â∑•‰ΩúÊó∂Èó¥Áä∂ÊÄÅ
const workingHours = {
    weekdays: "9:00 - 18:00",
    weekends: "10:00 - 16:00",
    timezone: "GMT+8 (Âåó‰∫¨Êó∂Èó¥)",
    currentStatus: "Âú®Á∫ø"
};

// ÊúâË∂£ÁöÑËÅîÁ≥ªÊèêÁ§∫
const contactTips = [
    "üí° ÊèêÈóÆÂâçÂèØ‰ª•ÂÖàÊü•ÁúãÊàëÁöÑÂçöÂÆ¢Ôºå‰πüËÆ∏ËÉΩÊâæÂà∞Á≠îÊ°à",
    "üöÄ È°πÁõÆÂêà‰ΩúËØ∑ËØ¶ÁªÜÊèèËø∞ÈúÄÊ±ÇÂíåÈ¢ÑÊúüÊó∂Èó¥",
    "‚òï Â¶ÇÊûúÂú®Âåó‰∫¨ÔºåÊ¨¢ËøéÁ∫¶‰∏™ÂíñÂï°Èù¢ËÅä",
    "üåô Ê∑±Â§úÊ∂àÊÅØÊàëÂèØËÉΩ‰∏ç‰ºöÁ´ãÂç≥ÂõûÂ§çÔºå‰ΩÜ‰∏ÄÂÆö‰ºöÁúãÂà∞",
    "üìù ÊäÄÊúØÈóÆÈ¢òËØ∑Êèê‰æõÂÖ∑‰ΩìÁöÑÈîôËØØ‰ø°ÊÅØÊàñ‰ª£Á†Å",
    "üéØ ÁÆÄÂéÜÊäïÈÄíËØ∑ËØ¥ÊòéÂÖ∑‰ΩìËÅå‰ΩçÂíåÂÖ¨Âè∏‰ø°ÊÅØ",
    "ü§ù ÂºÄÊ∫êÈ°πÁõÆÂêà‰ΩúÈöèÊó∂Ê¨¢Ëøé",
    "üìö Â≠¶‰π†‰∫§ÊµÅÂíåÊäÄÊúØÂàÜ‰∫´ÈÉΩÂæà‰πêÊÑèÂèÇ‰∏é"
];

export function ContactInfo({ className = "" }: ContactInfoProps) {
    const [currentTip, setCurrentTip] = useState(0);
    const [currentTime, setCurrentTime] = useState("");
    const [isWorkingHours, setIsWorkingHours] = useState(true);

    // Êõ¥Êñ∞ÂΩìÂâçÊó∂Èó¥ÂíåÂ∑•‰ΩúÁä∂ÊÄÅ
    useEffect(() => {
        const updateTimeAndStatus = () => {
            const now = new Date();
            const timeString = now.toLocaleTimeString('zh-CN', {
                hour12: false,
                hour: '2-digit',
                minute: '2-digit'
            });
            setCurrentTime(timeString);

            // Âà§Êñ≠ÊòØÂê¶Âú®Â∑•‰ΩúÊó∂Èó¥ÂÜÖ
            const hour = now.getHours();
            const day = now.getDay();
            const isWeekend = day === 0 || day === 6;

            if (isWeekend) {
                setIsWorkingHours(hour >= 10 && hour < 16);
            } else {
                setIsWorkingHours(hour >= 9 && hour < 18);
            }
        };

        updateTimeAndStatus();
        const timer = setInterval(updateTimeAndStatus, 1000);
        return () => clearInterval(timer);
    }, []);

    // ËΩÆÊí≠ËÅîÁ≥ªÊèêÁ§∫
    useEffect(() => {
        const tipTimer = setInterval(() => {
            setCurrentTip((prev) => (prev + 1) % contactTips.length);
        }, 4000);

        return () => clearInterval(tipTimer);
    }, []);

    return (
        <div className={`space-y-8 ${className}`}>
            {/* ÂΩìÂâçÁä∂ÊÄÅÂç°Áâá */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200/50"
            >
                <div className="flex items-center justify-between mb-4">
                    <h3 className="text-lg font-semibold text-gray-800 flex items-center">
                        <Zap className="w-5 h-5 mr-2 text-yellow-500" />
                        ÂΩìÂâçÁä∂ÊÄÅ
                    </h3>
                    <div className="flex items-center space-x-2">
                        <div className={`w-2 h-2 rounded-full animate-pulse ${isWorkingHours ? 'bg-green-500' : 'bg-orange-500'}`}></div>
                        <span className="text-sm text-gray-600">
                            {isWorkingHours ? 'Â∑•‰ΩúÊó∂Èó¥' : 'ÈùûÂ∑•‰ΩúÊó∂Èó¥'}
                        </span>
                    </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="bg-white rounded-xl p-4 shadow-sm text-center">
                        <div className="flex items-center justify-center mb-2">
                            {isWorkingHours ? (
                                <Sun className="w-5 h-5 text-yellow-500" />
                            ) : (
                                <Moon className="w-5 h-5 text-blue-500" />
                            )}
                        </div>
                        <div className="text-sm text-gray-600 mb-1">ÂΩìÂâçÊó∂Èó¥</div>
                        <div className="font-medium text-gray-800 font-mono">{currentTime}</div>
                    </div>

                    <div className="bg-white rounded-xl p-4 shadow-sm text-center">
                        <MapPin className="w-5 h-5 text-red-500 mx-auto mb-2" />
                        <div className="text-sm text-gray-600 mb-1">Êó∂Âå∫</div>
                        <div className="font-medium text-gray-800">{workingHours.timezone}</div>
                    </div>

                    <div className="bg-white rounded-xl p-4 shadow-sm text-center">
                        <Timer className="w-5 h-5 text-green-500 mx-auto mb-2" />
                        <div className="text-sm text-gray-600 mb-1">ÂìçÂ∫îÊó∂Èó¥</div>
                        <div className="font-medium text-gray-800">
                            {isWorkingHours ? '1-3Â∞èÊó∂' : '6-12Â∞èÊó∂'}
                        </div>
                    </div>
                </div>
            </motion.div>

            {/* ËÅîÁ≥ªÊñπÂºèÂÅèÂ•Ω */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                className="bg-white rounded-2xl p-6 shadow-lg border border-gray-200/50"
            >
                <h3 className="text-lg font-semibold text-gray-800 mb-6 flex items-center">
                    <Heart className="w-5 h-5 mr-2 text-red-500" />
                    ËÅîÁ≥ªÊñπÂºèÂÅèÂ•Ω
                </h3>

                <div className="space-y-4">
                    {contactPreferences.map((contact, index) => (
                        <motion.div
                            key={contact.method}
                            initial={{ opacity: 0, x: -20 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}
                            className={`${contact.bgColor} rounded-xl p-4 border border-gray-200/50`}
                        >
                            <div className="flex items-start space-x-4">
                                <div className={`p-2 bg-white rounded-lg shadow-sm`}>
                                    <contact.icon className={`w-5 h-5 ${contact.color}`} />
                                </div>

                                <div className="flex-1">
                                    <div className="flex items-center justify-between mb-2">
                                        <h4 className="font-semibold text-gray-800">{contact.method}</h4>
                                        <div className="flex items-center space-x-2">
                                            <span className={`px-2 py-1 text-xs font-medium rounded-full ${contact.preference === 'ÊúÄ‰Ω≥' ? 'bg-green-100 text-green-700' :
                                                    contact.preference === 'Âø´ÈÄü' ? 'bg-blue-100 text-blue-700' :
                                                        'bg-orange-100 text-orange-700'
                                                }`}>
                                                {contact.preference}
                                            </span>
                                            <span className="text-xs text-gray-500">
                                                {contact.responseTime}
                                            </span>
                                        </div>
                                    </div>

                                    <p className="text-sm text-gray-600 mb-3">{contact.description}</p>

                                    <div className="flex flex-wrap gap-2">
                                        {contact.tips.map((tip, tipIndex) => (
                                            <span
                                                key={tipIndex}
                                                className="text-xs px-2 py-1 bg-white/70 text-gray-600 rounded-full"
                                            >
                                                {tip}
                                            </span>
                                        ))}
                                    </div>

                                    <div className="mt-2 text-xs text-gray-500">
                                        ÂèØÁî®Êó∂Èó¥Ôºö{contact.availability}
                                    </div>
                                </div>
                            </div>
                        </motion.div>
                    ))}
                </div>
            </motion.div>

            {/* Â∑•‰ΩúÊó∂Èó¥ËØ¥Êòé */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.4 }}
                className="bg-gradient-to-r from-green-50 to-blue-50 rounded-2xl p-6 border border-green-200/50"
            >
                <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                    <Clock className="w-5 h-5 mr-2 text-blue-500" />
                    Â∑•‰ΩúÊó∂Èó¥
                </h3>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="bg-white rounded-xl p-4 shadow-sm">
                        <div className="text-sm text-gray-600 mb-2">Â∑•‰ΩúÊó•</div>
                        <div className="font-medium text-gray-800 flex items-center">
                            <Sun className="w-4 h-4 text-yellow-500 mr-2" />
                            {workingHours.weekdays}
                        </div>
                    </div>

                    <div className="bg-white rounded-xl p-4 shadow-sm">
                        <div className="text-sm text-gray-600 mb-2">Âë®Êú´</div>
                        <div className="font-medium text-gray-800 flex items-center">
                            <Coffee className="w-4 h-4 text-amber-500 mr-2" />
                            {workingHours.weekends}
                        </div>
                    </div>
                </div>

                <div className="mt-4 p-3 bg-white/70 rounded-lg">
                    <p className="text-sm text-gray-600">
                        üí° <strong>Â∞èË¥¥Â£´Ôºö</strong>Â∑•‰ΩúÊó∂Èó¥ÂÜÖÂèëÈÄÅÁöÑÊ∂àÊÅØÈÄöÂ∏∏ËÉΩÂæóÂà∞Êõ¥Âø´ÁöÑÂõûÂ§ç„ÄÇ
                        ÈùûÂ∑•‰ΩúÊó∂Èó¥ÁöÑÊ∂àÊÅØÊàë‰πü‰ºöÁúãÂà∞ÔºåÂè™ÊòØÂõûÂ§çÂèØËÉΩ‰ºöÁ®çÊôö‰∏Ä‰∫õ„ÄÇ
                    </p>
                </div>
            </motion.div>

            {/* ÊúâË∂£ÁöÑËÅîÁ≥ªÊèêÁ§∫ */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.6 }}
                className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-2xl p-6 border border-yellow-200/50"
            >
                <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                    <Star className="w-5 h-5 mr-2 text-yellow-500" />
                    ËÅîÁ≥ªÂ∞èË¥¥Â£´
                </h3>

                <div className="min-h-[80px] flex items-center">
                    <AnimatePresence mode="wait">
                        <motion.div
                            key={currentTip}
                            initial={{ opacity: 0, y: 20 }}
                            animate={{ opacity: 1, y: 0 }}
                            exit={{ opacity: 0, y: -20 }}
                            transition={{ duration: 0.5 }}
                            className="text-gray-700 text-base leading-relaxed"
                        >
                            {contactTips[currentTip]}
                        </motion.div>
                    </AnimatePresence>
                </div>

                <div className="flex justify-center mt-4">
                    <div className="flex space-x-1">
                        {contactTips.map((_, index) => (
                            <div
                                key={index}
                                className={`w-2 h-2 rounded-full transition-colors duration-300 ${index === currentTip ? 'bg-yellow-500' : 'bg-gray-300'
                                    }`}
                            />
                        ))}
                    </div>
                </div>
            </motion.div>

            {/* ËÅîÁ≥ªÈºìÂä± */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.8 }}
                className="text-center"
            >
                <div className="bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-2xl p-6">
                    <h4 className="text-lg font-semibold mb-2">Âà´ÁäπË±´ÔºåËÅîÁ≥ªÊàëÂêßÔºÅ</h4>
                    <p className="text-purple-100 mb-4">
                        Êó†ËÆ∫ÊòØÊäÄÊúØËÆ®ËÆ∫„ÄÅÈ°πÁõÆÂêà‰ΩúÔºåËøòÊòØÁÆÄÂçïÁöÑÈóÆÂÄôÔºåÊàëÈÉΩÂæà‰πêÊÑè‰∏é‰Ω†‰∫§ÊµÅ„ÄÇ
                    </p>
                    <div className="flex items-center justify-center space-x-4 text-sm">
                        <div className="flex items-center space-x-1">
                            <Heart className="w-4 h-4" />
                            <span>ÂèãÂ•Ω‰∫§ÊµÅ</span>
                        </div>
                        <div className="flex items-center space-x-1">
                            <Zap className="w-4 h-4" />
                            <span>Âø´ÈÄüÂìçÂ∫î</span>
                        </div>
                        <div className="flex items-center space-x-1">
                            <Star className="w-4 h-4" />
                            <span>‰∏ì‰∏öÂª∫ËÆÆ</span>
                        </div>
                    </div>
                </div>
            </motion.div>
        </div>
    );
}
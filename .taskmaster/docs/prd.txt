# Tiny Room 个人网站项目需求文档 (PRD)

## 项目概述

### 项目目标
构建一个现代化的个人网站平台，集成内容展示、管理和数据分析功能。优先实现Dashboard管理系统，其他公开页面后期完善。

### 核心价值
- 整合Obsidian、GitHub、本地资源到统一平台
- 提供专业级的内容管理和数据分析
- 展现个人技术实力和创作能力

## 技术规范

### 核心技术栈
- **前端框架**: Next.js 15 (App Router)
- **开发语言**: TypeScript (strict模式) 
- **样式方案**: Tailwind CSS + Framer Motion
- **组件系统**: Headless UI + 自定义UI组件
- **状态管理**: Zustand (按需使用)
- **图标系统**: Lucide React
- **包管理器**: pnpm

### 后端与数据
- **API架构**: Next.js API Routes (RESTful)
- **数据库**: SQLite (开发) / PostgreSQL (生产)
- **文件存储**: 开发阶段Vercel本地，生产阶段Cloudflare R2
- **认证方案**: NextAuth.js v5
- **部署平台**: Vercel

### 设计系统
- **设计风格**: Vercel风格 - 高质量灰度系统 + 高饱和度强调色
- **响应式**: 移动端优先设计
- **动画**: Framer Motion流畅交互
- **组件规范**: 统一的设计语言和组件库

## 功能需求

### 核心功能模块

#### 1. Dashboard系统 (优先实现)
**概览页面 (/dashboard)**
- 统计卡片展示各模块数据概况
- 最近活动时间线
- 系统状态监控
- 快速操作面板

**Blog管理 (/dashboard/blog)**
- Obsidian文件同步系统
- 文章列表管理和内容编辑
- 发布状态控制
- 阅读统计和内容分析

**Projects管理 (/dashboard/projects)**
- GitHub API集成和同步
- 项目列表管理和展示设置
- 代码统计和活动分析
- 仓库选择和配置

**Gallery管理 (/dashboard/gallery)**
- 图片批量上传和处理
- 相册分类和标签管理
- 存储统计和空间管理
- 图片元数据编辑

**系统设置 (/dashboard/settings)**
- 个人信息和主题设置
- API密钥配置管理
- 系统维护工具
- 外观自定义选项

#### 2. 认证系统
- NextAuth.js v5集成
- 安全的登录/登出流程
- 会话管理和保护路由
- 用户权限控制

#### 3. 搜索系统
- PostgreSQL全文搜索
- 跨模块内容搜索 (Blog/Projects/Gallery)
- 高级搜索和筛选
- 搜索结果统计

#### 4. 统计分析系统
- 访问数据收集和展示
- 内容交互分析
- 性能监控图表
- 数据可视化组件

### 外部集成需求

#### GitHub集成
- Personal Access Token认证
- 仓库数据自动同步
- 提交历史和统计分析
- 项目信息展示优化

#### Obsidian集成
- 本地文件系统同步
- Markdown文件解析
- 文章元数据提取
- 发布状态管理

#### 图片处理
- 多格式支持和验证
- 自动压缩和WebP转换
- 多尺寸图片生成
- EXIF元数据提取

## 非功能性需求

### 性能要求
- Core Web Vitals绿色指标
- 图片懒加载和优化
- 代码分割和缓存策略
- 移动端性能优化

### SEO优化
- 完整meta标签系统
- 结构化数据标记
- 自动生成sitemap
- 图片alt标签优化

### 用户体验
- 响应式设计适配
- 流畅的动画交互
- 友好的错误处理
- 直观的导航系统

### 安全性
- API路由保护
- 输入验证和清洗
- 文件上传安全检查
- 敏感数据加密

## 开发优先级

### 第一优先级 (核心Dashboard)
1. 项目基础架构和配置
2. 设计系统和UI组件库  
3. 用户认证系统
4. Dashboard概览页面
5. 系统设置页面

### 第二优先级 (内容管理)
1. Blog管理功能
2. Projects管理功能
3. Gallery管理功能
4. 搜索系统实现

### 第三优先级 (优化完善)
1. 统计分析系统
2. 性能优化和SEO
3. 移动端体验优化
4. 错误处理完善

### 延后实现 (公开页面)
- 首页展示页面
- Blog展示页面
- Projects展示页面  
- Gallery展示页面

## 技术债务和约束

### 开发约束
- 必须使用生产级代码，非演示代码
- TypeScript严格模式，100%类型覆盖
- 移动端优先的响应式设计
- 现代化的文件结构组织

### 质量标准
- ESLint零错误
- Prettier统一格式
- Core Web Vitals绿色
- 完整的错误处理

### 部署要求
- Vercel平台部署
- 环境变量安全管理
- 自动化CI/CD流程
- 生产环境优化

## 验收标准

### Dashboard功能完整性
- 所有管理页面正常运行
- 数据同步功能正常
- 统计图表正确显示
- 设置功能完全可用

### 技术指标达标
- 页面加载速度 < 2.5s
- 移动端完美适配
- SEO得分 > 90
- 无严重安全漏洞

### 用户体验优秀
- 界面美观现代
- 操作流程直观
- 错误提示友好
- 响应速度快速